name: Docker

on:
  workflow_call:
    inputs:
      push:
        description: "Push the image to the registry"
        type: boolean
        default: false
        required: false
    outputs:
      image:
        description: "Output Image"
        value: ${{ github.repository }}:sha-${{ jobs.build.outputs.version }}

jobs:

  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.sha_short }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - name: Set output vars
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository }}
          tags: |
            type=schedule
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ github.repository }}:buildcache
          cache-to: type=registry,ref=${{ github.repository }}:buildcache,mode=max
      -
        if: ${{ github.event_name != 'pull_request' }}
        name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ github.repository }}
